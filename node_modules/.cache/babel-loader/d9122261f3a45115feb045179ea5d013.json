{"ast":null,"code":"function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n// Visit The Stimulus Handbook for more details\n// https://stimulusjs.org/handbook/introduction\n//\n// This example controller works with specially annotated HTML like:\n//\n// <div data-controller=\"hello\">\n//   <h1 data-target=\"hello.output\"></h1>\n// </div>\nimport { Controller } from \"stimulus\";\n\nvar _default = /*#__PURE__*/function (_Controller) {\n  _inherits(_default, _Controller);\n\n  var _super = _createSuper(_default);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(_default, [{\n    key: \"connect\",\n    value: function connect() {\n      //create\n      this.localStorageKey = window.location; // Retrieve data from localStorage when the Controller loads.\n\n      this.setFormData();\n    }\n  }, {\n    key: \"clearLocalStorage\",\n    value: function clearLocalStorage() {\n      // See if there is data stored for this particular form.\n      if (localStorage.getItem(this.localStorageKey) != null) {\n        // Clear data from localStorage when the form is submitted.\n        localStorage.removeItem(this.localStorageKey);\n      }\n    }\n  }, {\n    key: \"getFormData\",\n    value: function getFormData() {\n      var form = new FormData(this.formTarget);\n      var data = [];\n\n      var _iterator = _createForOfIteratorHelper(form.entries()),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var pair = _step.value;\n\n          // We don't want to save the authenticity_token to localStorage since that is generated by Rails.\n          // https://guides.rubyonrails.org/security.html#cross-site-request-forgery-csrf\n          if (pair[0] != \"authenticity_token\") {\n            data.push([pair[0], pair[1]]);\n          }\n        } // Return the key/value pairs as an Object. Each key is a field name, and each value is the field value.\n        // https://developer.mozilla.org/en-us/docs/Web/JavaScript/Reference/Global_Objects/Object/fromEntries\n\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return Object.fromEntries(data);\n    }\n  }, {\n    key: \"saveToLocalStorage\",\n    value: function saveToLocalStorage() {\n      var data = this.getFormData(); // Save the form data into localStorage. We need to convert the data Object into a String.\n\n      localStorage.setItem(this.localStorageKey, JSON.stringify(data));\n    }\n  }, {\n    key: \"setFormData\",\n    value: function setFormData() {\n      // See if there is data stored for this particular form.\n      if (localStorage.getItem(this.localStorageKey) != null) {\n        // We need to convert the String of data back into an Object.\n        var data = JSON.parse(localStorage.getItem(this.localStorageKey)); // This allows us to have access to this.formTarget in the loop below.\n\n        var form = this.formTarget; // Loop through each key/value pair and set the value on the corresponding form field.\n\n        Object.entries(data).forEach(function (entry) {\n          var name = entry[0];\n          var value = entry[1];\n          var input = form.querySelector(\"[name='\".concat(name, \"']\"));\n          input && (input.value = value);\n        });\n      }\n    }\n  }]);\n\n  return _default;\n}(Controller);\n\n_default.targets = [\"form\"];\nexport { _default as default };","map":{"version":3,"sources":["/app/app/javascript/controllers/auto_save_controller.js"],"names":["Controller","localStorageKey","window","location","setFormData","localStorage","getItem","removeItem","form","FormData","formTarget","data","entries","pair","push","Object","fromEntries","getFormData","setItem","JSON","stringify","parse","forEach","entry","name","value","input","querySelector","targets"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,UAAT,QAA2B,UAA3B;;;;;;;;;;;;;;;WAKE,mBAAU;AACR;AACA,WAAKC,eAAL,GAAuBC,MAAM,CAACC,QAA9B,CAFQ,CAGR;;AACA,WAAKC,WAAL;AACD;;;WAED,6BAAoB;AAClB;AACA,UAAIC,YAAY,CAACC,OAAb,CAAqB,KAAKL,eAA1B,KAA8C,IAAlD,EAAwD;AACtD;AACAI,QAAAA,YAAY,CAACE,UAAb,CAAwB,KAAKN,eAA7B;AACD;AACF;;;WAED,uBAAc;AACZ,UAAMO,IAAI,GAAG,IAAIC,QAAJ,CAAa,KAAKC,UAAlB,CAAb;AACA,UAAIC,IAAI,GAAG,EAAX;;AAFY,iDAGKH,IAAI,CAACI,OAAL,EAHL;AAAA;;AAAA;AAGZ,4DAAiC;AAAA,cAAxBC,IAAwB;;AAC/B;AACA;AACA,cAAIA,IAAI,CAAC,CAAD,CAAJ,IAAW,oBAAf,EAAqC;AACnCF,YAAAA,IAAI,CAACG,IAAL,CAAU,CAACD,IAAI,CAAC,CAAD,CAAL,EAAUA,IAAI,CAAC,CAAD,CAAd,CAAV;AACD;AACF,SATW,CAUZ;AACA;;AAXY;AAAA;AAAA;AAAA;AAAA;;AAYZ,aAAOE,MAAM,CAACC,WAAP,CAAmBL,IAAnB,CAAP;AACD;;;WAED,8BAAqB;AACnB,UAAMA,IAAI,GAAG,KAAKM,WAAL,EAAb,CADmB,CAEnB;;AACAZ,MAAAA,YAAY,CAACa,OAAb,CAAqB,KAAKjB,eAA1B,EAA2CkB,IAAI,CAACC,SAAL,CAAeT,IAAf,CAA3C;AACD;;;WACD,uBAAc;AACZ;AACA,UAAIN,YAAY,CAACC,OAAb,CAAqB,KAAKL,eAA1B,KAA8C,IAAlD,EAAwD;AACtD;AACA,YAAMU,IAAI,GAAGQ,IAAI,CAACE,KAAL,CAAWhB,YAAY,CAACC,OAAb,CAAqB,KAAKL,eAA1B,CAAX,CAAb,CAFsD,CAGtD;;AACA,YAAMO,IAAI,GAAG,KAAKE,UAAlB,CAJsD,CAKtD;;AACAK,QAAAA,MAAM,CAACH,OAAP,CAAeD,IAAf,EAAqBW,OAArB,CAA6B,UAACC,KAAD,EAAW;AACtC,cAAIC,IAAI,GAAGD,KAAK,CAAC,CAAD,CAAhB;AACA,cAAIE,KAAK,GAAGF,KAAK,CAAC,CAAD,CAAjB;AACA,cAAIG,KAAK,GAAGlB,IAAI,CAACmB,aAAL,kBAA6BH,IAA7B,QAAZ;AACAE,UAAAA,KAAK,KAAKA,KAAK,CAACD,KAAN,GAAcA,KAAnB,CAAL;AACD,SALD;AAMD;AACF;;;;EArD0BzB,U;;SACpB4B,O,GAAU,CAAC,MAAD,C","sourcesContent":["// Visit The Stimulus Handbook for more details\n// https://stimulusjs.org/handbook/introduction\n//\n// This example controller works with specially annotated HTML like:\n//\n// <div data-controller=\"hello\">\n//   <h1 data-target=\"hello.output\"></h1>\n// </div>\n\nimport { Controller } from \"stimulus\";\n\nexport default class extends Controller {\n  static targets = [\"form\"];\n\n  connect() {\n    //create\n    this.localStorageKey = window.location;\n    // Retrieve data from localStorage when the Controller loads.\n    this.setFormData();\n  }\n\n  clearLocalStorage() {\n    // See if there is data stored for this particular form.\n    if (localStorage.getItem(this.localStorageKey) != null) {\n      // Clear data from localStorage when the form is submitted.\n      localStorage.removeItem(this.localStorageKey);\n    }\n  }\n\n  getFormData() {\n    const form = new FormData(this.formTarget);\n    let data = [];\n    for (var pair of form.entries()) {\n      // We don't want to save the authenticity_token to localStorage since that is generated by Rails.\n      // https://guides.rubyonrails.org/security.html#cross-site-request-forgery-csrf\n      if (pair[0] != \"authenticity_token\") {\n        data.push([pair[0], pair[1]]);\n      }\n    }\n    // Return the key/value pairs as an Object. Each key is a field name, and each value is the field value.\n    // https://developer.mozilla.org/en-us/docs/Web/JavaScript/Reference/Global_Objects/Object/fromEntries\n    return Object.fromEntries(data);\n  }\n\n  saveToLocalStorage() {\n    const data = this.getFormData();\n    // Save the form data into localStorage. We need to convert the data Object into a String.\n    localStorage.setItem(this.localStorageKey, JSON.stringify(data));\n  }\n  setFormData() {\n    // See if there is data stored for this particular form.\n    if (localStorage.getItem(this.localStorageKey) != null) {\n      // We need to convert the String of data back into an Object.\n      const data = JSON.parse(localStorage.getItem(this.localStorageKey));\n      // This allows us to have access to this.formTarget in the loop below.\n      const form = this.formTarget;\n      // Loop through each key/value pair and set the value on the corresponding form field.\n      Object.entries(data).forEach((entry) => {\n        let name = entry[0];\n        let value = entry[1];\n        let input = form.querySelector(`[name='${name}']`);\n        input && (input.value = value);\n      });\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}